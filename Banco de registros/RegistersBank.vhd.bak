library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_ARITH.ALL;
use IEEE.STD_LOGIC_UNSIGNED.ALL;

entity RegistersBank is
port (CLK: in std_logic;
		WE: in std_logic;
		RE: in std_logic;
		RdnAdd: in std_logic_vector(2 downto 0);
		RmAdd: in std_logic_vector(2 downto 0);
		DATAin: std_logic_vector(31 downto 0);
		
		Rdn: out std_logic_vector(31 downto 0);
		Rm: out std_logic_vector(31 downto 0)
		);
end registersBank;
	
architecture RTL of registersBank is

type registerFile is array(0 to 15) of std_logic_vector(31 downto 0);
signal registers : registerFile;


begin
Process(CLK) begin
	if CLK'EVENT AND CLK='1'THEN
		S<=A AND B;
	else null;
	end if;
end process;


end RTL;